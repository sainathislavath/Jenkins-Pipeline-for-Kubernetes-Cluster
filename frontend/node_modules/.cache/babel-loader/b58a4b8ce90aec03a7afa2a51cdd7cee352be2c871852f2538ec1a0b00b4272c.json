{"ast":null,"code":"import axios from 'axios';\n\n// API base URLs for each microservice\nconst API_GATEWAYS = {\n  user: process.env.REACT_APP_USER_SERVICE_URL || 'http://localhost:3001',\n  product: process.env.REACT_APP_PRODUCT_SERVICE_URL || 'http://localhost:3002',\n  cart: process.env.REACT_APP_CART_SERVICE_URL || 'http://localhost:3003',\n  order: process.env.REACT_APP_ORDER_SERVICE_URL || 'http://localhost:3004'\n};\n\n// Create axios instances for each service\nconst createApiInstance = baseURL => {\n  const instance = axios.create({\n    baseURL,\n    timeout: 10000\n  });\n\n  // Add auth token to requests\n  instance.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, error => Promise.reject(error));\n\n  // Handle auth errors\n  instance.interceptors.response.use(response => response, error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  });\n  return instance;\n};\n\n// API instances\nexport const userApi = createApiInstance(API_GATEWAYS.user);\nexport const productApi = createApiInstance(API_GATEWAYS.product);\nexport const cartApi = createApiInstance(API_GATEWAYS.cart);\nexport const orderApi = createApiInstance(API_GATEWAYS.order);\n\n// User Service APIs\nexport const authService = {\n  register: data => userApi.post('/api/auth/register', data),\n  login: data => userApi.post('/api/auth/login', data),\n  getProfile: () => userApi.get('/api/auth/me'),\n  updateProfile: data => userApi.put('/api/users/profile', data)\n};\n\n// Product Service APIs\nexport const productService = {\n  getProducts: params => productApi.get('/api/products', {\n    params\n  }),\n  getProduct: id => productApi.get(`/api/products/${id}`),\n  getCategories: () => productApi.get('/api/categories'),\n  createProduct: data => productApi.post('/api/products', data),\n  updateProduct: (id, data) => productApi.put(`/api/products/${id}`, data),\n  deleteProduct: id => productApi.delete(`/api/products/${id}`)\n};\n\n// Cart Service APIs\nexport const cartService = {\n  getCart: userId => cartApi.get(`/api/cart/${userId}`),\n  addToCart: (userId, data) => cartApi.post(`/api/cart/${userId}/items`, data),\n  updateCartItem: (userId, productId, data) => cartApi.put(`/api/cart/${userId}/items/${productId}`, data),\n  removeFromCart: (userId, productId) => cartApi.delete(`/api/cart/${userId}/items/${productId}`),\n  clearCart: userId => cartApi.delete(`/api/cart/${userId}`),\n  validateCart: userId => cartApi.post(`/api/cart/${userId}/validate`)\n};\n\n// Order Service APIs\nexport const orderService = {\n  getUserOrders: (userId, params) => orderApi.get(`/api/orders/user/${userId}`, {\n    params\n  }),\n  getOrder: id => orderApi.get(`/api/orders/${id}`),\n  createOrder: data => orderApi.post('/api/orders', data),\n  updateOrderStatus: (id, data) => orderApi.put(`/api/orders/${id}/status`, data),\n  cancelOrder: (id, data) => orderApi.delete(`/api/orders/${id}`, {\n    data\n  }),\n  processPayment: data => orderApi.post('/api/payments/process', data),\n  getPaymentDetails: orderId => orderApi.get(`/api/payments/order/${orderId}`)\n};\n\n// Helper function to handle API errors\nexport const handleApiError = error => {\n  if (error.response) {\n    // Server responded with error status\n    return error.response.data.message || 'An error occurred';\n  } else if (error.request) {\n    // Request was made but no response received\n    return 'Network error. Please check your connection.';\n  } else {\n    // Something else happened\n    return 'An unexpected error occurred';\n  }\n};","map":{"version":3,"names":["axios","API_GATEWAYS","user","process","env","REACT_APP_USER_SERVICE_URL","product","REACT_APP_PRODUCT_SERVICE_URL","cart","REACT_APP_CART_SERVICE_URL","order","REACT_APP_ORDER_SERVICE_URL","createApiInstance","baseURL","instance","create","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","userApi","productApi","cartApi","orderApi","authService","register","data","post","login","getProfile","get","updateProfile","put","productService","getProducts","params","getProduct","id","getCategories","createProduct","updateProduct","deleteProduct","delete","cartService","getCart","userId","addToCart","updateCartItem","productId","removeFromCart","clearCart","validateCart","orderService","getUserOrders","getOrder","createOrder","updateOrderStatus","cancelOrder","processPayment","getPaymentDetails","orderId","handleApiError","message"],"sources":["E:/E-CommerceStore/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API base URLs for each microservice\r\nconst API_GATEWAYS = {\r\n  user: process.env.REACT_APP_USER_SERVICE_URL || 'http://localhost:3001',\r\n  product: process.env.REACT_APP_PRODUCT_SERVICE_URL || 'http://localhost:3002',\r\n  cart: process.env.REACT_APP_CART_SERVICE_URL || 'http://localhost:3003',\r\n  order: process.env.REACT_APP_ORDER_SERVICE_URL || 'http://localhost:3004',\r\n};\r\n\r\n// Create axios instances for each service\r\nconst createApiInstance = (baseURL) => {\r\n  const instance = axios.create({\r\n    baseURL,\r\n    timeout: 10000,\r\n  });\r\n\r\n  // Add auth token to requests\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n  );\r\n\r\n  // Handle auth errors\r\n  instance.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return instance;\r\n};\r\n\r\n// API instances\r\nexport const userApi = createApiInstance(API_GATEWAYS.user);\r\nexport const productApi = createApiInstance(API_GATEWAYS.product);\r\nexport const cartApi = createApiInstance(API_GATEWAYS.cart);\r\nexport const orderApi = createApiInstance(API_GATEWAYS.order);\r\n\r\n// User Service APIs\r\nexport const authService = {\r\n  register: (data) => userApi.post('/api/auth/register', data),\r\n  login: (data) => userApi.post('/api/auth/login', data),\r\n  getProfile: () => userApi.get('/api/auth/me'),\r\n  updateProfile: (data) => userApi.put('/api/users/profile', data),\r\n};\r\n\r\n// Product Service APIs\r\nexport const productService = {\r\n  getProducts: (params) => productApi.get('/api/products', { params }),\r\n  getProduct: (id) => productApi.get(`/api/products/${id}`),\r\n  getCategories: () => productApi.get('/api/categories'),\r\n  createProduct: (data) => productApi.post('/api/products', data),\r\n  updateProduct: (id, data) => productApi.put(`/api/products/${id}`, data),\r\n  deleteProduct: (id) => productApi.delete(`/api/products/${id}`),\r\n};\r\n\r\n// Cart Service APIs\r\nexport const cartService = {\r\n  getCart: (userId) => cartApi.get(`/api/cart/${userId}`),\r\n  addToCart: (userId, data) => cartApi.post(`/api/cart/${userId}/items`, data),\r\n  updateCartItem: (userId, productId, data) => \r\n    cartApi.put(`/api/cart/${userId}/items/${productId}`, data),\r\n  removeFromCart: (userId, productId) => \r\n    cartApi.delete(`/api/cart/${userId}/items/${productId}`),\r\n  clearCart: (userId) => cartApi.delete(`/api/cart/${userId}`),\r\n  validateCart: (userId) => cartApi.post(`/api/cart/${userId}/validate`),\r\n};\r\n\r\n// Order Service APIs\r\nexport const orderService = {\r\n  getUserOrders: (userId, params) => \r\n    orderApi.get(`/api/orders/user/${userId}`, { params }),\r\n  getOrder: (id) => orderApi.get(`/api/orders/${id}`),\r\n  createOrder: (data) => orderApi.post('/api/orders', data),\r\n  updateOrderStatus: (id, data) => orderApi.put(`/api/orders/${id}/status`, data),\r\n  cancelOrder: (id, data) => orderApi.delete(`/api/orders/${id}`, { data }),\r\n  processPayment: (data) => orderApi.post('/api/payments/process', data),\r\n  getPaymentDetails: (orderId) => orderApi.get(`/api/payments/order/${orderId}`),\r\n};\r\n\r\n// Helper function to handle API errors\r\nexport const handleApiError = (error) => {\r\n  if (error.response) {\r\n    // Server responded with error status\r\n    return error.response.data.message || 'An error occurred';\r\n  } else if (error.request) {\r\n    // Request was made but no response received\r\n    return 'Network error. Please check your connection.';\r\n  } else {\r\n    // Something else happened\r\n    return 'An unexpected error occurred';\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}